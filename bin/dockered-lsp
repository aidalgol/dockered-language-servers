#!/bin/bash
set -eEu -o pipefail
shopt -s failglob
trap 'echo >&2 "${BASH_SOURCE:-$0}:${LINENO}: unknown error"' ERR

registry_namespace=dockeredlsp
home_mounts_path="$HOME/.config/dockered-lsp/home-mounts"

common_opts=(
  --rm
  --interactive
  --user="$(id -u):$(id -g)"
)

load_home_mount_file() {
  if [ -f "$home_mounts_path" ]; then
    while IFS= read -r path; do
      common_opts+=(--mount="type=bind,source=$HOME/$path,destination=$HOME/$path")
    done < "$home_mounts_path"
  else
    common_opts+=(--mount="type=bind,source=$HOME,destination=$HOME")
  fi
}

exec_image() {
  image_name="$registry_namespace/$1"
  shift
  exec docker run "${common_opts[@]}" "$image_name" "$@"
}

exec_elixir_image() {
  image_name="$registry_namespace/$1"
  shift
  exec docker run "${common_opts[@]}" \
       --env="MIX_HOME=$HOME/.mix" \
       --env="HEX_HOME=$HOME/.hex" \
       "$image_name" "$@"
}

if [ "$(basename "$0")" == "dockered-lsp" ]; then
  if [ "$#" -lt 1 ]; then
    echo "Usage: $0 LANGUAGE-SERVER" >&2
    exit 1
  fi
  server_name="$1"
  shift
else
  server_name="$(basename "$0")"
fi

load_home_mount_file

case "$server_name" in
  elixir-ls-1.10) exec_elixir_image elixir-ls:1.10-23.3.4 "$@" ;;
  elixir-ls-1.11) exec_elixir_image elixir-ls:1.11-23.3.4 "$@" ;;
  elixir-ls-1.12) exec_elixir_image elixir-ls:1.12-23.3.4 "$@" ;;
  bash-language-server) exec_image bash-ls:latest "$@" ;;
  css-languageserver) exec_image css-ls:latest "$@" ;;
  clojure-lsp) exec_image clojure-ls:latest "$@" ;;
  *) echo "No such language server \"$server_name\"" >&2; exit 1 ;;
esac
